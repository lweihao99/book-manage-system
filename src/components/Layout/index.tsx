import React, { PropsWithChildren, useEffect, useState } from "react";
import Image from "next/image";
import Head from "next/head";
import type { MenuProps } from "antd";
import { Layout as AntdLayout, Menu, Dropdown, Space, message } from "antd";
import { DownOutlined } from "@ant-design/icons";

import styles from "./index.module.css";
import { useRouter } from "next/router";
import { userLogout } from "@/apis/user";
import Link from "next/link";

const { Header, Content, Sider } = AntdLayout;

const ITEMS = [
  {
    key: `book`,
    // icon: React.createElement(icon),
    label: `Library manage`,

    children: [
      { label: `Book Category`, key: `/book` },
      { label: `Add Book`, key: `/book/add` }, // key 改成路由，这样在点击之后就会跳转到指定路由
    ],
  },
  {
    key: `category`,
    // icon: React.createElement(icon),
    label: `Category management`,

    children: [
      { label: `Category List`, key: `/category` },
      { label: `Add Category`, key: `/category/add` }, // key 改成路由，这样在点击之后就会跳转到指定路由
    ],
  },
  {
    key: `borrow`,
    // icon: React.createElement(icon),
    label: `Borrow`,

    children: [
      { label: `Borrow list`, key: `/borrow` },
      { label: `Book Lending `, key: `/borrow/add` }, // key 改成路由，这样在点击之后就会跳转到指定路由
    ],
  },
  {
    key: `user`,
    // icon: React.createElement(icon),
    label: `Profile management`,

    children: [
      { label: `User list`, key: `/user` },
      { label: `Add User`, key: `/user/add` }, // key 改成路由，这样在点击之后就会跳转到指定路由
    ],
  },
];

// export function Layout({ children }: { children: ReactNode }) {
export const Layout: React.FC<PropsWithChildren> = ({ children }) => {
  const router = useRouter();
  const [user, setUser] = useState({ info: { nickName: "" } });

  // 定义这是Menu的一个方法
  const HandleMenuClick: MenuProps["onClick"] = ({
    item,
    key,
    keyPath,
    domEvent,
  }) => {
    router.push(key); // 跳转到key路由
  };

  // menu items
  const USER_ITEMS: MenuProps["items"] = [
    {
      key: "1",
      label: <Link href="/user/edit/id">Profile Details</Link>,
    }, // 根据获取到的 ID 进入用户编辑页面
    {
      key: "2",
      label: (
        <span
          onClick={async () => {
            await userLogout();
            sessionStorage.removeItem("user");
            message.success("Log Out Successfully!");
            router.push("/login");
          }}
        >
          Logout
        </span>
      ),
    },
  ];

  const activeMenu = router.pathname;

  // 获取缓存数据
  useEffect(() => {
    // 判断现在时在客户端还是在服务端避免访问不了缓存数据, 服务端读取不了window变量
    if (typeof window !== "undefined") {
      const userStorage = sessionStorage.getItem("user");
      if (userStorage) {
        setUser(JSON.parse(userStorage));
      }
    }
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={`${styles.main} `}>
        <AntdLayout>
          {/* 头部 */}
          <Header className={styles.header}>
            <Image
              src="/logo.svg"
              width={30}
              height={30}
              alt="logo"
              className={styles.logo}
            ></Image>
            Book Manage System
            {/* 左上小菜单栏 */}
            <span className={styles.user}>
              <Dropdown menu={{ items: USER_ITEMS }}>
                <a onClick={(e) => e.preventDefault()}>
                  <Space>
                    {user?.info?.nickName ? user?.info?.nickName : "Username"}
                    <DownOutlined />
                  </Space>
                </a>
              </Dropdown>
            </span>
          </Header>

          <AntdLayout className={styles.sectionInner}>
            {/* 边栏菜单 */}
            <Sider width={200}>
              <Menu
                mode="inline"
                defaultSelectedKeys={["1"]}
                defaultOpenKeys={["sub1"]}
                selectedKeys={[activeMenu]} // 被选中的菜单等于路由当前的地址
                style={{ height: "100%", borderRight: 0 }}
                items={ITEMS}
                onClick={HandleMenuClick}
              />
            </Sider>

            {/* 内容 */}
            <AntdLayout className={styles.sectionContent}>
              <Content className={styles.content}>{children}</Content>
            </AntdLayout>
          </AntdLayout>
        </AntdLayout>
      </main>
    </>
  );
};
